@use "sass:map";
@use "sass:meta";
@use "variables" as *;
@use "mixins" as *;
@use "utilities";

// Reset
html {
  box-sizing: border-box;
  font-size: 16px;
}

html,
body {
  height: 100%;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ol,
ul {
  margin: 0;
  padding: 0;
  font-weight: normal;
}

ol,
ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

// Custom styles
:root {
  --slide-down-distance: -7rem;
  --avatar-width-mult: 3;
  --avatar-font-mult: 5.5;
}

body {
  font-family: $font-family;
  background: map-get($colors, "pink-5");
}

h1 {
  font-weight: 700;
}

a {
  text-decoration: none;
}

::selection {
  background: map-get($colors, "pink-2");
}

.logo {
  font-size: $font-size-base * 3;
  animation-duration: 0.8s;
  animation-name: logoanim;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
}

.artboard {
  background: map-get($colors, "white");
  @include border-radius(4);
}

.friend {
  // height: $friend-list-item-height;
  // background-color: map-get($colors, "white");
  &:hover {
    background-color: map-get($colors, "gray-1");
  }
  &-editable {
    &:hover {
      background-color: map-get($colors, "pink-1") !important;
    }
  }

  button {
    .emoji {
      @include transition();
    }
    &:hover {
      .emoji {
        @include shake($animation-duration * 2);
        scale: 1.2;
      }
    }
  }
  input[type="text"],
  input[type="number"],
  input[type="email"],
  input[type="tel"],
  textarea {
    box-sizing: border-box;
    border: none;
    padding: inherit;
    width: 100%;
    text-decoration: underline;
    text-decoration-style: dotted;
    text-decoration-color: map-get($colors, "pink-4");
    box-shadow: none;
    color: map-get($colors, "red");

    &:hover {
      cursor: text;
    }
    &:disabled {
      border: none;
      text-decoration: dashed;
      color: map-get($colors, "gray-5");
      &[id^="number-input"] {
        color: map-get($colors, "gray-6");
      }
    }
    &:focus {
      box-shadow: none;
      @include flashing($animation-duration * 2);
    }
  }

  .avatar {
    aspect-ratio: 1 / 1;
    overflow: hidden;
    background: map-get($colors, "gray-1");
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    @media screen and (min-width: map-get($breakpoints, "sm")) {
      --avatar-width-mult: 2;
      --avatar-font-mult: 5;
    }
    @media screen and (min-width: map-get($breakpoints, "md")) {
      --avatar-width-mult: 2;
      --avatar-font-mult: 5;
    }
    @media screen and (min-width: map-get($breakpoints, "lg")) {
      --avatar-width-mult: 1;
      --avatar-font-mult: 4;
    }

    min-width: calc(
      $friend-list-item-height - $friend-list-item-padding *
        var(--avatar-width-mult)
    );
    font-size: calc(
      $friend-list-item-height - $friend-list-item-padding *
        var(--avatar-font-mult)
    );
    box-shadow: 0 0 0 2px map-get($colors, "gray-3") inset,
      0 0 0 4px map-get($colors, "white") inset,
      0 0 0 6px map-get($colors, "gray-2") inset;
    &-editable {
      box-shadow: 0 0 0 2px map-get($colors, "pink-3") inset,
        0 0 0 4px map-get($colors, "white") inset,
        0 0 0 6px map-get($colors, "gray-2") inset !important;
      &:hover {
        cursor: pointer;
      }
    }
    & text {
      font-family: $font-family;
    }
    & svg {
      width: 100%;
    }
    & img {
      max-width: calc($friend-list-item-height - $friend-list-item-padding * 2);
    }
  }
}

#friend-form {
  #friend-form-name {
    position: relative;
    .emoji {
      position: absolute;
      top: 0;
      right: 0;
      @include padding(2);
      font-size: inherit;
      line-height: 1;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      &:hover {
        cursor: pointer;
      }
    }
  }
}
#save-button {
  background: map-get($colors, "cyan");
  border-color: color-mix(in srgb, map-get($colors, "cyan") 80%, #000);
  &:hover {
    background: color-mix(in srgb, map-get($colors, "cyan") 80%, #fff);
    border-color: color-mix(in srgb, map-get($colors, "cyan") 90%, #000);
  }
}

#friend-form-message {
  color: map-get($colors, "pink-5");
}
#clear-list {
  color: map-get($colors, "red");
  &:hover {
    color: color-mix(in srgb, map-get($colors, "red") 50%, #500);
  }
  &:before {
    content: attr(data-before);
  }
}

#emoji-picker {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - map-get($levels, 3) * $base-size);
  max-height: auto;
  overflow-y: auto;
  font-size: calc(map-get($levels, 4) * $base-size + 2vw);
  ul {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    @media screen and (min-width: map-get($breakpoints, "sm")) {
      grid-template-columns: repeat(10, 1fr);
    }
    @media screen and (min-width: map-get($breakpoints, "md")) {
      grid-template-columns: repeat(12, 1fr);
    }
    @media screen and (min-width: map-get($breakpoints, "lg")) {
      grid-template-columns: repeat(16, 1fr);
    }
    li {
      cursor: pointer;
      scale: 0.9;

      &:hover {
        @include shake($animation-duration * 2);
        scale: 1.1;
      }
    }
  }
}

.slide-down {
  animation-duration: $animation-duration;
  animation-name: slideDown;
  animation-iteration-count: 1;
  transition-timing-function: ease;
}

.slide-up {
  animation-duration: $animation-duration;
  animation-name: slideDown;
  animation-direction: reverse;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  transition-timing-function: ease;
}

@keyframes logoanim {
  from {
    rotate: -25deg;
  }

  to {
    rotate: 25deg;
  }
}

@keyframes slideDown {
  from {
    margin-top: var(--slide-down-distance);
    opacity: 0;
  }
  35% {
    opacity: 0;
  }
  to {
    opacity: 1;
    margin-top: 0 inherit;
  }
}
