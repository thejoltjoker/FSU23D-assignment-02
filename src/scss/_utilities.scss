@use "variables" as *;
@use "mixins" as *;
@use "sass:math";

.transition {
  @include transition();
}

.container {
  width: 100%;
}

@each $name, $width in $widths {
  .max-width-#{$name} {
    max-width: $width;
  }
}

.height-full {
  height: 100%;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grow {
  flex-grow: 1;
}

.ar-square {
  aspect-ratio: 1 / 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-even {
  justify-content: space-evenly;
}

.items-center {
  align-items: center;
}

.justify-self-end {
  justify-self: end;
}

// Colors
@each $name, $color in $colors {
  .color-#{$name} {
    color: $color;
  }

  .bg-#{$name} {
    background-color: $color;
  }
}

// Margin & Padding
.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

@each $level, $i in $levels {
  .m-#{$level} {
    margin: $base-size * $i;
  }
  .mx-#{$level} {
    margin-left: $base-size * $i;
    margin-right: $base-size * $i;
  }
  .my-#{$level} {
    margin-top: $base-size * $i;
    margin-bottom: $base-size * $i;
  }
  .ml-#{$level} {
    margin-left: $base-size * $i;
  }
  .mr-#{$level} {
    margin-right: $base-size * $i;
  }
  .mt-#{$level} {
    margin-top: $base-size * $i;
  }
  .mb-#{$level} {
    margin-bottom: $base-size * $i;
  }
  .p-#{$level} {
    padding: $base-size * $i;
  }
  .px-#{$level} {
    padding-left: $base-size * $i;
    padding-right: $base-size * $i;
  }
  .py-#{$level} {
    padding-top: $base-size * $i;
    padding-bottom: $base-size * $i;
  }
  .pl-#{$level} {
    padding-left: $base-size * $i;
  }
  .pr-#{$level} {
    padding-right: $base-size * $i;
  }
  .pt-#{$level} {
    padding-top: $base-size * $i;
  }
  .pb-#{$level} {
    padding-bottom: $base-size * $i;
  }
}

@each $breakpoint, $value in $breakpoints {
  @media screen and (min-width: $value) {
    @each $level, $i in $levels {
      .m-#{$breakpoint}-#{$level} {
        margin: $base-size * $i;
      }
      .mx-#{$breakpoint}-#{$level} {
        margin-left: $base-size * $i;
        margin-right: $base-size * $i;
      }
      .my-#{$breakpoint}-#{$level} {
        margin-top: $base-size * $i;
        margin-bottom: $base-size * $i;
      }
      .ml-#{$breakpoint}-#{$level} {
        margin-left: $base-size * $i;
      }
      .mr-#{$breakpoint}-#{$level} {
        margin-right: $base-size * $i;
      }
      .mt-#{$breakpoint}-#{$level} {
        margin-top: $base-size * $i;
      }
      .mb-#{$breakpoint}-#{$level} {
        margin-bottom: $base-size * $i;
      }
      .p-#{$breakpoint}-#{$level} {
        padding: $base-size * $i;
      }
      .px-#{$breakpoint}-#{$level} {
        padding-left: $base-size * $i;
        padding-right: $base-size * $i;
      }
      .py-#{$breakpoint}-#{$level} {
        padding-top: $base-size * $i;
        padding-bottom: $base-size * $i;
      }
      .pl-#{$breakpoint}-#{$level} {
        padding-left: $base-size * $i;
      }
      .pr-#{$breakpoint}-#{$level} {
        padding-right: $base-size * $i;
      }
      .pt-#{$breakpoint}-#{$level} {
        padding-top: $base-size * $i;
      }
      .pb-#{$breakpoint}-#{$level} {
        padding-bottom: $base-size * $i;
      }
    }
  }
}

// Shadow
.shadow-sm {
  box-shadow: 0 math.div($base-size, 2) $base-size 0
    color-mix(in srgb, map-get($colors, "pink-5") 50%, rgba(0, 0, 0, 0.2) 50%);
}

.shadow-lg {
  box-shadow: 0 25px 70px 0
    color-mix(in srgb, map-get($colors, "pink-5") 50%, rgba(0, 0, 0, 0.2) 50%);
}

// Font
@each $level, $i in $levels {
  .font-size-#{$level} {
    font-size: $base-size * $i;
  }
}

@each $breakpoint, $value in $breakpoints {
  @media screen and (min-width: $value) {
    @each $level, $i in $levels {
      .font-size-#{$breakpoint}-#{$level} {
        font-size: $base-size * $i;
      }
    }
  }
}

.font-thin {
  font-weight: 300;
}

.font-regular {
  font-weight: 400;
}

.font-bold {
  font-weight: 700;
}
// Text
.text-lg {
  font-size: var(--spacer-5);
}

.text-center {
  text-align: center;
}

// Position
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

//Z-index
@for $i from 1 through 5 {
  .z-#{$i*10} {
    z-index: $i * 10;
  }
}

// Border radius
@each $level, $i in $levels {
  .radius-#{$level} {
    border-radius: $base-size * $i;
  }
}

.radius-50 {
  border-radius: 50%;
  overflow: hidden;
}

.muted {
  opacity: 50%;
}

.button-group {
  display: inline-flex;
  border: 1px solid map-get($colors, "gray-3");
  border-radius: $button-radius;
  background-color: map-get($colors, "white");
  .button {
    border: none;
    border-radius: 0;
    &:first-child {
      border-right: 1px solid map-get($colors, "gray-3");
    }
  }
}
button {
  background-color: transparent;
  border-width: 0;
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  line-height: inherit;
}
.button {
  border-radius: $button-radius;
  cursor: pointer;
  border: 1px solid map-get($colors, "gray-3");
}
input,
textarea {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  line-height: inherit;
  padding: 0;
  margin: 0;
  opacity: 1; /* required on iOS */
  &:disabled {
    opacity: 1; /* required on iOS */
  }
}
input[type="text"],
input[type="number"],
input[type="email"],
input[type="tel"],
textarea {
  cursor: text;
  background-color: transparent;
  border-width: 0;
  border-radius: $button-radius;
  border: 1px solid map-get($colors, "gray-3");
  width: 100%;
  @include padding(2);
  &:focus {
    box-shadow: 0 math.div($base-size, 3) $base-size 0
      color-mix(in srgb, map-get($colors, "pink-5") 10%, rgba(0, 0, 0, 0.1) 50%);
    border: 1px solid map-get($colors, "pink-5");
    outline: none;
  }

  &::placeholder {
    color: map-get($colors, "gray-3");
  }
}

.blackout {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
  @include background-opacity(map-get($colors, "pink-5"), 0.75);
}

.no-select {
  user-select: none;
}

.modal-container {
  @include background-opacity(map-get($colors, "pink-5"), 0.75);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}

.modal-content {
  max-width: 100%;
  height: fit-content;
}

.display-none {
  display: none;
}

.fade-in {
  animation-duration: $animation-duration;
  animation-name: fadein;
  animation-iteration-count: 1;
  transition-timing-function: ease;
}
.fade-out {
  animation-duration: $animation-duration;
  animation-name: fadein;
  animation-iteration-count: 1;
  transition-timing-function: ease;
  animation-direction: reverse;
}

@keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.slow-flashing {
  @include flashing($animation-duration * 2);
}

@keyframes flashing {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}

.spin-in {
  animation-duration: $animation-duration;
  animation-name: spinin;
  animation-iteration-count: 1;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.spin-out {
  animation-duration: $animation-duration;
  animation-name: spinin;
  animation-iteration-count: 1;
  animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
  animation-direction: reverse;
}

@keyframes spinin {
  from {
    rotate: 360deg;
  }
  to {
    rotate: 0deg;
  }
}

@keyframes shake {
  10%,
  90% {
    rotate: -1deg;
  }

  20%,
  80% {
    rotate: 2deg;
  }

  30%,
  50%,
  70% {
    rotate: -4deg;
  }

  40%,
  60% {
    rotate: 4deg;
  }
}
